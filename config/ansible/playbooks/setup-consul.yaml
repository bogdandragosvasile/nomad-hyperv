---
# Ansible playbook for setting up Consul cluster
- name: Setup Consul HA Cluster
  hosts: consul_servers
  become: true
  gather_facts: true
  
  vars:
    consul_user: consul
    consul_group: consul
    consul_home: /opt/consul
    consul_config_dir: /etc/consul.d
    consul_data_dir: /opt/consul/data
    consul_log_dir: /var/log/consul
    
  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      
    - name: Install required packages
      apt:
        name:
          - unzip
          - curl
          - wget
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
        
    - name: Create consul user and group
      user:
        name: "{{ consul_user }}"
        system: yes
        shell: /bin/false
        home: "{{ consul_home }}"
        create_home: no
        
    - name: Create consul directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: '0755'
      loop:
        - "{{ consul_home }}"
        - "{{ consul_config_dir }}"
        - "{{ consul_data_dir }}"
        - "{{ consul_log_dir }}"
        
    - name: Download and extract Consul
      unarchive:
        src: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_linux_amd64.zip"
        dest: /tmp/
        remote_src: yes
        creates: /tmp/consul
        
    - name: Install Consul binary
      copy:
        src: /tmp/consul
        dest: /usr/local/bin/consul
        mode: '0755'
        remote_src: yes
        
    - name: Create Consul systemd service file
      template:
        src: consul.service.j2
        dest: /etc/systemd/system/consul.service
        mode: '0644'
      notify: restart consul
        
    - name: Create Consul configuration
      template:
        src: consul-server.json.j2
        dest: "{{ consul_config_dir }}/consul.json"
        mode: '0644'
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
      notify: restart consul
      
    - name: Create Consul encryption key
      command: consul keygen
      register: consul_encrypt_key
      changed_when: false
      
    - name: Store Consul encryption key
      set_fact:
        consul_encrypt_key: "{{ consul_encrypt_key.stdout }}"
        
    - name: Configure firewall for Consul
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 8300  # RPC
        - 8301  # LAN Serf
        - 8302  # WAN Serf
        - 8500  # HTTP API
        - 8501  # HTTPS API
        - 8600  # DNS
      when: enable_ufw | bool
      
    - name: Enable and start Consul service
      systemd:
        name: consul
        enabled: yes
        state: started
        daemon_reload: yes
        
  tasks:
    - name: Wait for Consul to start
      uri:
        url: "http://localhost:8500/v1/status/leader"
        method: GET
      register: consul_status
      until: consul_status.status == 200
      retries: 30
      delay: 10
      
    - name: Join Consul cluster
      command: "consul join {{ hostvars[item]['ansible_host'] }}"
      loop: "{{ groups['consul_servers'] }}"
      when: item != inventory_hostname
      register: join_result
      changed_when: join_result.rc == 0
      failed_when: 
        - join_result.rc != 0 
        - "'already a member' not in join_result.stderr"
        
    - name: Verify Consul cluster membership
      command: consul members
      register: consul_members
      changed_when: false
      
    - name: Display Consul cluster status
      debug:
        msg: "{{ consul_members.stdout_lines }}"
        
  post_tasks:
    - name: Check Consul cluster health
      uri:
        url: "http://localhost:8500/v1/status/peers"
        method: GET
      register: consul_peers
      
    - name: Verify cluster quorum
      assert:
        that:
          - consul_peers.json | length >= 3
        fail_msg: "Consul cluster does not have enough peers for quorum"
        success_msg: "Consul cluster is healthy with {{ consul_peers.json | length }} peers"
        
  handlers:
    - name: restart consul
      systemd:
        name: consul
        state: restarted
        daemon_reload: yes
